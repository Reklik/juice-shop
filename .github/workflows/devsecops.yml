name: DevSecOps Pipeline

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  # ------ ZADANIE 1: Budowanie, testowanie i skanowanie zależności (to co miałeś) ------
  build-and-test:
    name: Build, Test & SCA Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies and build app (via postinstall)
        run: npm install

      - name: Smoke Test
        run: |
          npm start &
          sleep 30
          curl -f http://localhost:3000

      - name: Run SCA scan with npm audit
        run: npm audit --audit-level=high || true

  # ------ ZADANIE 2: Skanowanie kodu źródłowego (nowy dodatek) ------
  sast-scan:
    name: Static Code Analysis (SAST)
    
    # Ta linia jest kluczowa! Mówi ona, że to zadanie musi poczekać,
    # aż zadanie 'build-and-test' zakończy się sukcesem.
    needs: build-and-test
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        # Każde zadanie działa na nowej, czystej maszynie, 
        # więc musimy ponownie pobrać kod.
        uses: actions/checkout@v4

      - name: Run Semgrep SAST scan
        # Ta gotowa akcja robi całą magię za nas.
        # Używamy predefiniowanego zestawu reguł bezpieczeństwa.
        uses: semgrep/semgrep-action@v2
        with:
          config: >-
            p/ci
            p/default
            p/javascript
            p/typescript
            p/owasp-top-ten
