name: DevSecOps Pipeline

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  issues: write # Zostawiamy to uprawnienie, nie szkodzi

jobs:
  build-and-test:
    name: Build, Test & SCA Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies and build app
        run: npm install
      - name: Smoke Test
        run: |
          npm start &
          sleep 30
          curl -f http://localhost:3000
      - name: Run SCA scan with npm audit
        run: npm audit --audit-level=high || true

  sast-scan:
    name: Static Code Analysis (SAST)
    needs: build-and-test
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep:latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
      - name: Run Semgrep SAST scan
        run: semgrep ci
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  secrets-scan:
    name: Secrets Scan
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run TruffleHog secrets scan
        uses: trufflesecurity/trufflehog@main
        with:
          base: ${{ github.event.before }}
          head: ${{ github.sha }}
          extra_args: --only-verified

  image-scan-and-push:
    name: Build, Scan, and Push Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/juice-shop:latest,${{ secrets.DOCKERHUB_USERNAME }}/juice-shop:${{ github.sha }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/juice-shop:latest'
          format: 'table'
          severity: 'HIGH,CRITICAL'
          exit-code: '0'
          ignore-unfixed: true

  dast-scan:
    name: Dynamic Analysis (DAST)
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Start Juice Shop container
        run: docker run -d --name juice_shop_for_scan -p 3000:3000 bkimminich/juice-shop
      - name: Wait for application to start
        run: sleep 30
      - name: OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: 'http://localhost:3000/'
          artifact_name: zap_scan_report
          # ------ OSTATECZNA POPRAWKA JEST TUTAJ ------
          # Ta linia mówi ZAP-owi, żeby nie próbował tworzyć zgłoszeń (Issues)
          allow_issue_writing: false